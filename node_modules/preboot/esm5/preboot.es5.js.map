{"version":3,"file":"preboot.es5.js","sources":["../../out-tsc/lib/common/get-node-key.ts","../../out-tsc/lib/common/tokens.ts","../../out-tsc/lib/common/index.ts","../../out-tsc/lib/api/event.replayer.ts","../../out-tsc/lib/api/event.recorder.ts","../../out-tsc/lib/api/inline.preboot.code.ts","../../out-tsc/lib/api/index.ts","../../out-tsc/lib/provider.ts","../../out-tsc/lib/module.ts","../../out-tsc/lib/public-api.ts","../../out-tsc/lib/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NodeContext } from './preboot.interfaces';\n\n/**\n * Attempt to generate key from node position in the DOM\n */\nexport function getNodeKeyForPreboot(nodeContext: NodeContext): string {\n  const ancestors: Element[] = [];\n  const root = nodeContext.root;\n  const node = nodeContext.node;\n  let temp: Element | null = node;\n\n  // walk up the tree from the target node up to the root\n  while (temp && temp !== root.serverNode && temp !== root.clientNode) {\n    ancestors.push(temp);\n    temp = temp.parentNode as Element;\n  }\n\n  // note: if temp doesn't exist here it means root node wasn't found\n  if (temp) {\n    ancestors.push(temp);\n  }\n\n  // now go backwards starting from the root, appending the appName to unique\n  // identify the node later..\n  const name = node.nodeName || 'unknown';\n  let key = name + '_' + root.serverSelector;\n  const len = ancestors.length;\n\n  for (let i = len - 1; i >= 0; i--) {\n    temp = ancestors[i];\n\n    if (temp.childNodes && i > 0) {\n      for (let j = 0; j < temp.childNodes.length; j++) {\n        if (temp.childNodes[j] === ancestors[i - 1]) {\n          key += '_s' + (j + 1);\n          break;\n        }\n      }\n    }\n  }\n\n  return key;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\nexport const PREBOOT_NONCE = new InjectionToken<string>('PrebootNonce');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './get-node-key';\nexport * from './preboot.interfaces';\nexport * from './tokens';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  NodeContext,\n  PrebootAppData,\n  PrebootData,\n  PrebootEvent,\n  PrebootWindow,\n  ServerClientRoot,\n} from '../common/preboot.interfaces';\nimport {getNodeKeyForPreboot} from '../common/get-node-key';\n\nexport function _window(): PrebootWindow {\n  return {\n    prebootData: (window as any)['prebootData'],\n    prebootStarted: false,\n    getComputedStyle: window.getComputedStyle,\n    document: document\n  };\n}\n\nexport class EventReplayer {\n  clientNodeCache: { [key: string]: Element } = {};\n  replayStarted = false;\n  win: PrebootWindow;\n\n  /**\n   * Window setting and getter to facilitate testing of window\n   * in non-browser environments\n   */\n  setWindow(win: PrebootWindow) {\n    this.win = win;\n  }\n\n  /**\n   * Window setting and getter to facilitate testing of window\n   * in non-browser environments\n   */\n  getWindow() {\n    if (!this.win) {\n      this.win = _window();\n    }\n    return this.win;\n  }\n\n  /**\n   * Replay all events for all apps. this can only be run once.\n   * if called multiple times, will only do something once\n   */\n  replayAll() {\n    if (this.replayStarted) {\n      return;\n    } else {\n      this.replayStarted = true;\n    }\n\n    // loop through each of the preboot apps\n    const prebootData = this.getWindow().prebootData || {};\n    const apps = prebootData.apps || [];\n    apps.forEach(appData => this.replayForApp(appData));\n\n    // once all events have been replayed and buffers switched, then we cleanup preboot\n    this.cleanup(prebootData);\n  }\n\n  /**\n   * Replay all events for one app (most of the time there is just one app)\n   * @param appData\n   */\n  replayForApp(appData: PrebootAppData) {\n    appData = <PrebootAppData>(appData || {});\n\n    // try catch around events b/c even if error occurs, we still move forward\n    try {\n      const root = <ServerClientRoot>(appData.root || {});\n      const events = appData.events || [];\n\n      // some client side frameworks (like Angular 1 w UI Router) will replace\n      // elements, so we need to re-get client root just to be safe\n      const doc = this.getWindow().document;\n      const clientSelector = root.clientSelector;\n      if (clientSelector != null) {\n        root.clientNode = doc.querySelector(clientSelector) as HTMLElement;\n      }\n\n      // replay all the events from the server view onto the client view\n      events.forEach(event => this.replayEvent(appData, event));\n    } catch (ex) {\n      console.error(ex);\n    }\n\n    // if we are buffering, switch the buffers\n    this.switchBuffer(appData);\n  }\n\n  /**\n   * Replay one particular event\n   * @param appData\n   * @param prebootEvent\n   */\n  replayEvent(appData: PrebootAppData, prebootEvent: PrebootEvent) {\n    appData = <PrebootAppData>(appData || {});\n    prebootEvent = <PrebootEvent>(prebootEvent || {});\n\n    const event = prebootEvent.event as Event;\n    const serverNode = prebootEvent.node || {};\n    const nodeKey = prebootEvent.nodeKey;\n    const clientNode = this.findClientNode({\n      root: appData.root,\n      node: serverNode,\n      nodeKey: nodeKey\n    });\n\n    // if client node can't be found, log a warning\n    if (!clientNode) {\n      console.warn(\n        `Trying to dispatch event ${event.type} to node ${nodeKey}\n        but could not find client node. Server node is: ${serverNode}`\n      );\n      return;\n    }\n\n    // now dispatch events and whatnot to the client node\n    (clientNode as HTMLInputElement).checked = serverNode.checked;\n    (clientNode as HTMLOptionElement).selected = serverNode.selected;\n    (clientNode as HTMLOptionElement).value = serverNode.value;\n    clientNode.dispatchEvent(event);\n  }\n\n  /**\n   * Switch the buffer for one particular app (i.e. display the client\n   * view and destroy the server view)\n   * @param appData\n   */\n  switchBuffer(appData: PrebootAppData) {\n    appData = <PrebootAppData>(appData || {});\n\n    const root = <ServerClientRoot>(appData.root || {});\n    const serverView = root.serverNode;\n    const clientView = root.clientNode;\n\n    // if no client view or the server view is the body or client\n    // and server view are the same, then don't do anything and return\n    if (!clientView || !serverView || serverView === clientView || serverView.nodeName === 'BODY') {\n      return;\n    }\n\n    // do a try-catch just in case something messed up\n    try {\n      // get the server view display mode\n      const gcs = this.getWindow().getComputedStyle;\n      const display = gcs(serverView).getPropertyValue('display') || 'block';\n\n      // first remove the server view\n      serverView.remove ? serverView.remove() : (serverView.style.display = 'none');\n\n      // now add the client view\n      clientView.style.display = display;\n    } catch (ex) {\n      console.error(ex);\n    }\n  }\n\n  /**\n   * Finally, set focus, remove all the event listeners and remove\n   * any freeze screen that may be there\n   * @param prebootData\n   */\n  cleanup(prebootData: PrebootData) {\n    prebootData = prebootData || {};\n\n    const listeners = prebootData.listeners || [];\n\n    // set focus on the active node AFTER a small delay to ensure buffer\n    // switched\n    const activeNode = prebootData.activeNode;\n    if (activeNode != null) {\n      setTimeout(() => this.setFocus(activeNode), 1);\n    }\n\n    // remove all event listeners\n    for (const listener of listeners) {\n      listener.node.removeEventListener(listener.eventName, listener.handler);\n    }\n\n    // remove the freeze overlay if it exists\n    const doc = this.getWindow().document;\n    const prebootOverlay = doc.body.querySelector('#prebootOverlay') as HTMLElement;\n    if (prebootOverlay) {\n      prebootOverlay.remove ?\n        prebootOverlay.remove() : prebootOverlay.parentNode !== null ?\n        prebootOverlay.parentNode.removeChild(prebootOverlay) :\n        prebootOverlay.style.display = 'none';\n    }\n\n    // clear out the data stored for each app\n    prebootData.apps = [];\n    this.clientNodeCache = {};\n\n    // send event to document that signals preboot complete\n    // constructor is not supported by older browsers ( i.e. IE9-11 )\n    // in these browsers, the type of CustomEvent will be \"object\"\n    if (typeof CustomEvent === 'function') {\n      const completeEvent = new CustomEvent('PrebootComplete');\n      doc.dispatchEvent(completeEvent);\n    } else {\n      console.warn(`Could not dispatch PrebootComplete event.\n       You can fix this by including a polyfill for CustomEvent.`);\n    }\n  }\n\n  setFocus(activeNode: NodeContext) {\n    // only do something if there is an active node\n    if (!activeNode || !activeNode.node || !activeNode.nodeKey) {\n      return;\n    }\n\n    // find the client node in the new client view\n    const clientNode = this.findClientNode(activeNode);\n    if (clientNode) {\n      // set focus on the client node\n      clientNode.focus();\n\n      // set selection if a modern browser (i.e. IE9+, etc.)\n      const selection = activeNode.selection;\n      if ((clientNode as HTMLInputElement).setSelectionRange && selection) {\n        try {\n          (clientNode as HTMLInputElement)\n            .setSelectionRange(selection.start, selection.end, selection.direction);\n        } catch (ex) {}\n      }\n    }\n  }\n\n  /**\n   * Given a node from the server rendered view, find the equivalent\n   * node in the client rendered view. We do this by the following approach:\n   *      1. take the name of the server node tag (ex. div or h1 or input)\n   *      2. add either id (ex. div#myid) or class names (ex. div.class1.class2)\n   *      3. use that value as a selector to get all the matching client nodes\n   *      4. loop through all client nodes found and for each generate a key value\n   *      5. compare the client key to the server key; once there is a match,\n   *          we have our client node\n   *\n   * NOTE: this only works when the client view is almost exactly the same as\n   * the server view. we will need an improvement here in the future to account\n   * for situations where the client view is different in structure from the\n   * server view\n   */\n  findClientNode(serverNodeContext: NodeContext): HTMLElement | null {\n    serverNodeContext = <NodeContext>(serverNodeContext || {});\n\n    const serverNode = serverNodeContext.node;\n    const root = serverNodeContext.root;\n\n    // if no server or client root, don't do anything\n    if (!root || !root.serverNode || !root.clientNode) {\n      return null;\n    }\n\n    // we use the string of the node to compare to the client node & as key in\n    // cache\n    const serverNodeKey = serverNodeContext.nodeKey || getNodeKeyForPreboot(serverNodeContext);\n\n    // if client node already in cache, return it\n    if (this.clientNodeCache[serverNodeKey]) {\n      return this.clientNodeCache[serverNodeKey] as HTMLElement;\n    }\n\n    // get the selector for client nodes\n    const className = (serverNode.className || '').replace('ng-binding', '').trim();\n    let selector = serverNode.tagName;\n\n    if (serverNode.id) {\n      selector += `#${serverNode.id}`;\n    } else if (className) {\n      selector += `.${className.replace(/ /g, '.')}`;\n    }\n\n    // select all possible client nodes and look through them to try and find a\n    // match\n    const rootClientNode = root.clientNode;\n    let clientNodes = rootClientNode.querySelectorAll(selector);\n\n    // if nothing found, then just try the tag name as a final option\n    if (!clientNodes.length) {\n      console.log(`nothing found for ${selector} so using ${serverNode.tagName}`);\n      clientNodes = rootClientNode.querySelectorAll(serverNode.tagName);\n    }\n\n    const length = clientNodes.length;\n    for (let i = 0; i < length; i++) {\n      const clientNode = clientNodes.item(i);\n\n      // get the key for the client node\n      const clientNodeKey = getNodeKeyForPreboot({\n        root: root,\n        node: clientNode\n      });\n\n      // if the client node key is exact match for the server node key, then we\n      // found the client node\n      if (clientNodeKey === serverNodeKey) {\n        this.clientNodeCache[serverNodeKey] = clientNode;\n        return clientNode as HTMLElement;\n      }\n    }\n\n    // if we get here and there is one clientNode, use it as a fallback\n    if (clientNodes.length === 1) {\n      this.clientNodeCache[serverNodeKey] = clientNodes[0];\n      return clientNodes[0] as HTMLElement;\n    }\n\n    // if we get here it means we couldn't find the client node so give the user\n    // a warning\n    console.warn(\n      `No matching client node found for ${serverNodeKey}.\n       You can fix this by assigning this element a unique id attribute.`\n    );\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  EventSelector,\n  PrebootOptions,\n  PrebootAppData,\n  PrebootData,\n  DomEvent,\n  PrebootWindow,\n  ServerClientRoot,\n  PrebootSelection,\n} from '../common/preboot.interfaces';\nimport {getNodeKeyForPreboot} from '../common/get-node-key';\n\n/**\n * Called right away to initialize preboot\n *\n * @param opts All the preboot options\n * @param win\n */\nexport function init(opts: PrebootOptions, win?: PrebootWindow) {\n  const theWindow = <PrebootWindow>(win || window);\n\n  // add the preboot options to the preboot data and then add the data to\n  // the window so it can be used later by the client\n  const data = (theWindow.prebootData = <PrebootData>{\n    opts: opts,\n    listening: true,\n    apps: [],\n    listeners: []\n  });\n\n  // start up preboot listening as soon as the DOM is ready\n  waitUntilReady(data);\n}\n\n/**\n * We want to attach event handlers as soon as possible. Unfortunately this\n * means before DOMContentLoaded fires, so we need to look for document.body to\n * exist instead.\n * @param data\n * @param win\n */\nexport function waitUntilReady(data: PrebootData, win?: PrebootWindow) {\n  const theWindow = <PrebootWindow>(win || window);\n  const _document = <Document>(theWindow.document || {});\n\n  if (_document.body) {\n    start(data);\n  } else {\n    setTimeout(function() {\n      waitUntilReady(data);\n    }, 10);\n  }\n}\n\n/**\n * Start up preboot by going through each app and assigning the appropriate\n * handlers. Normally this wouldn't be called directly, but we have set it up so\n * that it can for older versions of Universal.\n *\n * @param prebootData Global preboot data object that contains options and will\n * have events\n * @param win Optional param to pass in mock window for testing purposes\n */\nexport function start(prebootData: PrebootData, win?: PrebootWindow) {\n  const theWindow = <PrebootWindow>(win || window);\n\n  // only start once\n  if (theWindow.prebootStarted) {\n    return;\n  } else {\n    theWindow.prebootStarted = true;\n  }\n\n  const _document = <Document>(theWindow.document || {});\n  const opts = prebootData.opts || ({} as PrebootOptions);\n  let eventSelectors = opts.eventSelectors || [];\n\n  // create an overlay that can be used later if a freeze event occurs\n  prebootData.overlay = createOverlay(_document);\n\n  // get an array of all the root info\n  const appRoots = prebootData.opts ? getAppRoots(_document, prebootData.opts) : [];\n\n  // for each app root\n  appRoots.forEach(function(root) {\n    // we track all events for each app in the prebootData object which is on\n    // the global scope\n    const appData = <PrebootAppData>{ root: root, events: [] };\n    if (prebootData.apps) {\n      prebootData.apps.push(appData);\n    }\n\n    eventSelectors = eventSelectors.map(eventSelector => {\n      if (!eventSelector.hasOwnProperty('replay')) {\n        eventSelector.replay = true;\n      }\n      return eventSelector;\n    });\n\n    // loop through all the eventSelectors and create event handlers\n    eventSelectors.forEach(eventSelector => handleEvents(prebootData, appData, eventSelector));\n  });\n}\n\n/**\n * Create an overlay div and add it to the DOM so it can be used\n * if a freeze event occurs\n *\n * @param _document The global document object (passed in for testing purposes)\n * @returns Element The overlay node is returned\n */\nexport function createOverlay(_document: Document): Element | undefined {\n  let overlay = _document.createElement('div');\n  overlay.setAttribute('id', 'prebootOverlay');\n  overlay.setAttribute(\n    'style',\n    'display:none;position:absolute;left:0;' +\n    'top:0;width:100%;height:100%;z-index:999999;background:black;opacity:.3'\n  );\n  _document.body.appendChild(overlay);\n\n  return overlay;\n}\n\n/**\n * Get references to all app root nodes based on input options. Users can\n * initialize preboot either by specifying appRoot which is just one or more\n * selectors for apps. This section option is useful for people that are doing their own\n * buffering (i.e. they have their own client and server view)\n *\n * @param _document The global document object passed in for testing purposes\n * @param opts Options passed in by the user to init()\n * @returns ServerClientRoot[] An array of root info for each app\n */\nexport function getAppRoots(_document: Document, opts: PrebootOptions): ServerClientRoot[] {\n  const roots: ServerClientRoot[] = [];\n\n  // loop through any appRoot selectors to add them to the list of roots\n  if (opts.appRoot && opts.appRoot.length) {\n    const baseList: string[] = [];\n    const appRootSelectors = baseList.concat(opts.appRoot);\n    appRootSelectors.forEach((selector: any) => roots.push({ serverSelector: selector }));\n  }\n\n  // now loop through the roots to get the nodes for each root\n  roots.forEach(root => {\n    root.serverNode = _document.querySelector(root.serverSelector) as HTMLElement;\n    root.clientSelector = root.clientSelector || root.serverSelector;\n\n    if (root.clientSelector !== root.serverSelector) {\n      // if diff selectors, then just get the client node\n      root.clientNode = _document.querySelector(root.clientSelector) as HTMLElement;\n    } else {\n      // if we are doing buffering, we need to create the buffer for the client\n      // else the client root is the same as the server\n      root.clientNode = opts.buffer ? createBuffer(root) : root.serverNode;\n    }\n\n    // if no server node found, log error\n    if (!root.serverNode) {\n      console.log(`No server node found for selector: ${root.serverSelector}`);\n    }\n  });\n\n  return roots;\n}\n\n/**\n * Under given server root, for given selector, record events\n *\n * @param prebootData\n * @param appData\n * @param eventSelector\n */\nexport function handleEvents(prebootData: PrebootData,\n                             appData: PrebootAppData,\n                             eventSelector: EventSelector) {\n  const serverRoot = appData.root.serverNode;\n\n  // don't do anything if no server root\n  if (!serverRoot) {\n    return;\n  }\n\n  // get all nodes under the server root that match the given selector\n  const nodes: NodeListOf<Element> = serverRoot.querySelectorAll(eventSelector.selector);\n\n  // don't do anything if no nodes found\n  if (!nodes) {\n    return;\n  }\n\n  // we want to add an event listener for each node and each event\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes.item(i);\n    eventSelector.events.forEach((eventName: string) => {\n      // get the appropriate handler and add it as an event listener\n      const handler = createListenHandler(prebootData, eventSelector, appData, node);\n      node.addEventListener(eventName, handler);\n\n      // need to keep track of listeners so we can do node.removeEventListener()\n      // when preboot done\n      if (prebootData.listeners) {\n        prebootData.listeners.push({\n          node: node as HTMLElement,\n          eventName,\n          handler\n        });\n      }\n    });\n  }\n}\n\n/**\n * Create handler for events that we will record\n */\nexport function createListenHandler(\n  prebootData: PrebootData,\n  eventSelector: EventSelector,\n  appData: PrebootAppData,\n  node: Element\n): EventListener {\n  const CARET_EVENTS = ['keyup', 'keydown', 'focusin', 'mouseup', 'mousedown'];\n  const CARET_NODES = ['INPUT', 'TEXTAREA'];\n\n  return function(event: DomEvent) {\n    const root = appData.root;\n    const eventName = event.type;\n\n    // if no node or no event name or not listening, just return\n    if (!node || !eventName) {\n      return;\n    }\n\n    // if key codes set for eventSelector, then don't do anything if event\n    // doesn't include key\n    const keyCodes = eventSelector.keyCodes;\n    if (keyCodes && keyCodes.length) {\n      const matchingKeyCodes = keyCodes.filter(keyCode => event.which === keyCode);\n\n      // if there are not matches (i.e. key entered NOT one of the key codes)\n      // then don't do anything\n      if (!matchingKeyCodes.length) {\n        return;\n      }\n    }\n\n    // if for a given set of events we are preventing default, do that\n    if (eventSelector.preventDefault) {\n      event.preventDefault();\n    }\n\n    // if an action handler passed in, use that\n    if (eventSelector.action) {\n      eventSelector.action(node, event);\n    }\n\n    // get the node key for a given node\n    const nodeKey = getNodeKeyForPreboot({ root: root, node: node });\n\n    // if event on input or text area, record active node\n    if (CARET_EVENTS.indexOf(eventName) >= 0 &&\n      CARET_NODES.indexOf(node.tagName ? node.tagName : '') >= 0) {\n      prebootData.activeNode = {\n        root: root,\n        node: node,\n        nodeKey: nodeKey,\n        selection: getSelection(node as HTMLInputElement)\n      };\n    } else if (eventName !== 'change' && eventName !== 'focusout') {\n      prebootData.activeNode = undefined;\n    }\n\n    // if we are freezing the UI\n    if (eventSelector.freeze) {\n      const overlay = prebootData.overlay as HTMLElement;\n\n      // show the overlay\n      overlay.style.display = 'block';\n\n      // hide the overlay after 10 seconds just in case preboot.complete() never\n      // called\n      setTimeout(() => {\n        overlay.style.display = 'none';\n      }, 10000);\n    }\n\n    // we will record events for later replay unless explicitly marked as\n    // doNotReplay\n    if (eventSelector.replay) {\n      appData.events.push({\n        node,\n        nodeKey,\n        event,\n        name: eventName\n      });\n    }\n  };\n}\n\n/**\n * Get the selection data that is later used to set the cursor after client view\n * is active\n */\nexport function getSelection(node: HTMLInputElement): PrebootSelection {\n  node = node || {} as HTMLInputElement;\n\n  const nodeValue = node.value || '';\n  const selection = {\n    start: nodeValue.length,\n    end: nodeValue.length,\n    direction: 'forward'\n  };\n\n  // if browser support selectionStart on node (Chrome, FireFox, IE9+)\n  try {\n    if (node.selectionStart || node.selectionStart === 0) {\n      selection.start = node.selectionStart;\n      selection.end = node.selectionEnd ? node.selectionEnd : 0;\n      selection.direction = node.selectionDirection ? node.selectionDirection : '';\n    }\n  } catch (ex) {}\n\n  return selection;\n}\n\n/**\n * Create buffer for a given node\n *\n * @param root All the data related to a particular app\n * @returns Returns the root client node.\n */\nexport function createBuffer(root: ServerClientRoot): HTMLElement {\n  const serverNode = root.serverNode;\n\n  // if no rootServerNode OR the selector is on the entire html doc or the body\n  // OR no parentNode, don't buffer\n  if (!serverNode || !serverNode.parentNode ||\n    root.serverSelector === 'html' || root.serverSelector === 'body') {\n    return serverNode as HTMLElement;\n  }\n\n  // create shallow clone of server root\n  const rootClientNode = serverNode.cloneNode(false) as HTMLElement;\n  // we want the client to write to a hidden div until the time for switching\n  // the buffers\n  rootClientNode.style.display = 'none';\n\n  // insert the client node before the server and return it\n  serverNode.parentNode.insertBefore(rootClientNode, serverNode);\n\n  // mark server node as not to be touched by AngularJS - needed for ngUpgrade\n  serverNode.setAttribute('ng-non-bindable', '');\n\n  // return the rootClientNode\n  return rootClientNode;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {PrebootOptions} from '../common/preboot.interfaces';\nimport {getNodeKeyForPreboot} from '../common/get-node-key';\n\nimport {\n  init,\n  waitUntilReady,\n  start,\n  createOverlay,\n  getAppRoots,\n  handleEvents,\n  createListenHandler,\n  getSelection,\n  createBuffer\n} from './event.recorder';\n\nconst eventRecorder = {\n  waitUntilReady,\n  start,\n  createOverlay,\n  getAppRoots,\n  handleEvents,\n  createListenHandler,\n  getSelection,\n  createBuffer\n};\n\n// exporting default options in case developer wants to use these + custom on\n// top\nexport const defaultOptions = <PrebootOptions>{\n  buffer: true,\n  minify: true,\n  replay: true,\n\n  // these are the default events are are listening for an transfering from\n  // server view to client view\n  eventSelectors: [\n    // for recording changes in form elements\n    {\n      selector: 'input,textarea',\n      events: ['keypress', 'keyup', 'keydown', 'input', 'change']\n    },\n    { selector: 'select,option', events: ['change'] },\n\n    // when user hits return button in an input box\n    {\n      selector: 'input',\n      events: ['keyup'],\n      preventDefault: true,\n      keyCodes: [13],\n      freeze: true\n    },\n\n    // when user submit form (press enter, click on button/input[type=\"submit\"])\n    {\n      selector: 'form',\n      events: ['submit'],\n      preventDefault: true,\n      freeze: true\n    },\n\n    // for tracking focus (no need to replay)\n    {\n      selector: 'input,textarea',\n      events: ['focusin', 'focusout', 'mousedown', 'mouseup'],\n      replay: false\n    },\n\n    // user clicks on a button\n    {\n      selector: 'button',\n      events: ['click'],\n      preventDefault: true,\n      freeze: true\n    }\n  ]\n};\n\n/**\n * Get the event recorder code based on all functions in event.recorder.ts\n * and the getNodeKeyForPreboot function.\n */\nexport function getEventRecorderCode(): string {\n  const eventRecorderFunctions: string[] = [];\n\n  for (const funcName in eventRecorder) {\n    if (eventRecorder.hasOwnProperty(funcName)) {\n      const fn = (<any>eventRecorder)[funcName].toString();\n      const fnCleaned = fn.replace('common_1.', '');\n      eventRecorderFunctions.push(fnCleaned);\n    }\n  }\n\n  // this is common function used to get the node key\n  eventRecorderFunctions.push(getNodeKeyForPreboot.toString());\n\n  // add new line characters for readability\n  return '\\n\\n' + eventRecorderFunctions.join('\\n\\n') + '\\n\\n';\n}\n\n\n/**\n * Used by the server side version of preboot. The main purpose\n * is to get the inline code that can be inserted into the server view.\n *\n * @param customOptions PrebootRecordOptions that override the defaults\n * @returns Generated inline preboot code is returned\n */\nexport function getInlinePrebootCode(customOptions?: PrebootOptions): string {\n  const opts = <PrebootOptions>assign({}, defaultOptions, customOptions);\n\n  // safety check to make sure options passed in are valid\n  validateOptions(opts);\n\n  const optsStr = stringifyWithFunctions(opts);\n  const scriptCode = getEventRecorderCode();\n\n  // TODO re-add minification option?\n\n  // wrap inline preboot code with a self executing function in order to create scope\n  const initStr = init.toString();\n  return `(function() {\n      ${scriptCode}\n      (${initStr.replace('common_1.', '')}\n      )(${optsStr})\n    })()`;\n}\n\n/**\n * Throw an error if issues with any options\n * @param opts\n */\nexport function validateOptions(opts: PrebootOptions) {\n  if (!opts.appRoot || !opts.appRoot.length) {\n    throw new Error(\n      'The appRoot is missing from preboot options. ' +\n        'This is needed to find the root of your application. ' +\n        'Set this value in the preboot options to be a selector for the root element of your app.'\n    );\n  }\n}\n\n/**\n * Object.assign() is not fully supporting in TypeScript, so\n * this is just a simple implementation of it\n *\n * @param target The target object\n * @param optionSets Any number of addition objects that are added on top of the\n * target\n * @returns A new object that contains all the merged values\n */\nexport function assign(target: Object, ...optionSets: any[]): Object {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const output = Object(target);\n  for (let index = 0; index < optionSets.length; index++) {\n    const source = optionSets[index];\n    if (source !== undefined && source !== null) {\n      for (const nextKey in source) {\n        if (source.hasOwnProperty && source.hasOwnProperty(nextKey)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n  }\n\n  return output;\n}\n\n/**\n * Stringify an object and include functions. This is needed since we are\n * letting users pass in options that include custom functions for things like\n * the freeze handler or action when an event occurs\n *\n * @param obj This is the object you want to stringify that includes some\n * functions\n * @returns The stringified version of an object\n */\nexport function stringifyWithFunctions(obj: Object): string {\n  const FUNC_START = 'START_FUNCTION_HERE';\n  const FUNC_STOP = 'STOP_FUNCTION_HERE';\n\n  // first stringify except mark off functions with markers\n  let str = JSON.stringify(obj, function(_key, value) {\n    // if the value is a function, we want to wrap it with markers\n    if (!!(value && value.constructor && value.call && value.apply)) {\n      return FUNC_START + value.toString() + FUNC_STOP;\n    } else {\n      return value;\n    }\n  });\n\n  // now we use the markers to replace function strings with actual functions\n  let startFuncIdx = str.indexOf(FUNC_START);\n  let stopFuncIdx: number;\n  let fn: string;\n  while (startFuncIdx >= 0) {\n    stopFuncIdx = str.indexOf(FUNC_STOP);\n\n    // pull string out\n    fn = str.substring(startFuncIdx + FUNC_START.length, stopFuncIdx);\n    fn = fn.replace(/\\\\n/g, '\\n');\n\n    str = str.substring(0, startFuncIdx - 1) + fn +\n      str.substring(stopFuncIdx + FUNC_STOP.length + 1);\n    startFuncIdx = str.indexOf(FUNC_START);\n  }\n\n  return str;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './event.replayer';\nexport * from './event.recorder';\nexport * from './inline.preboot.code';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  APP_BOOTSTRAP_LISTENER,\n  ApplicationRef,\n  Inject,\n  InjectionToken,\n  Optional,\n  PLATFORM_ID\n} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser, isPlatformServer} from '@angular/common';\nimport {take} from 'rxjs/operators/take';\nimport {filter} from 'rxjs/operators/filter';\n\nimport {EventReplayer} from './api/event.replayer';\nimport {PREBOOT_NONCE} from './common/tokens';\nimport {getInlinePrebootCode} from './api/inline.preboot.code';\nimport {PrebootOptions} from './common/preboot.interfaces';\n\nconst PREBOOT_SCRIPT_ID = 'preboot-inline-script';\nexport const PREBOOT_OPTIONS = new InjectionToken<PrebootOptions>('PrebootOptions');\n\nexport function PREBOOT_FACTORY(doc: Document,\n                                prebootOpts: PrebootOptions,\n                                nonce: string|null,\n                                platformId: Object,\n                                appRef: ApplicationRef,\n                                eventReplayer: EventReplayer) {\n  return () => {\n    if (isPlatformServer(platformId)) {\n      const inlineCode = getInlinePrebootCode(prebootOpts);\n      const script = doc.createElement('script');\n      if (nonce) {\n        (<any>script)['nonce'] = nonce;\n      }\n      script.id = PREBOOT_SCRIPT_ID;\n      script.textContent = inlineCode;\n      const existingScripts = doc.querySelectorAll(`#${PREBOOT_SCRIPT_ID}`);\n\n      // Check to see if a preboot script is already inlined before adding\n      // it to the DOM. If it is, update the nonce to be current\n      if (existingScripts.length === 0) {\n        doc.head.appendChild(script);\n      } else if (existingScripts.length > 0 && nonce) {\n        (<any>existingScripts[0])['nonce'] = nonce;\n      }\n    }\n    if (isPlatformBrowser(platformId)) {\n      const replay = prebootOpts.replay != null ? prebootOpts.replay : true;\n      if (replay) {\n        appRef.isStable\n          .pipe(\n            filter(stable => stable),\n            take(1)\n          ).subscribe(() => {\n          eventReplayer.replayAll();\n        });\n      }\n    }\n  };\n}\n\nexport const PREBOOT_PROVIDER = {\n  provide: <InjectionToken<() => void>>APP_BOOTSTRAP_LISTENER,\n  useFactory: PREBOOT_FACTORY,\n  deps: [\n    DOCUMENT,\n    PREBOOT_OPTIONS,\n    [new Optional(), new Inject(PREBOOT_NONCE)],\n    PLATFORM_ID,\n    ApplicationRef,\n    EventReplayer,\n  ],\n  multi: true\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {EventReplayer} from './api/event.replayer';\nimport {PrebootOptions} from './common/preboot.interfaces';\nimport {PREBOOT_OPTIONS, PREBOOT_PROVIDER} from './provider';\n\n@NgModule({\n  providers: [EventReplayer, PREBOOT_PROVIDER]\n})\nexport class PrebootModule {\n  static withConfig(opts: PrebootOptions): ModuleWithProviders {\n    return {\n      ngModule: PrebootModule,\n      providers: [{provide: PREBOOT_OPTIONS, useValue: opts}]\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './common/index';\nexport * from './api/index';\nexport * from './module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {PREBOOT_FACTORY as ɵb,PREBOOT_OPTIONS as ɵa,PREBOOT_PROVIDER as ɵc} from './provider';"],"names":[],"mappings":"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"}